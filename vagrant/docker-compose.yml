version: '2'
services:
    #MySQL
    dbMaster:
        command: ["mysqld", "--innodb-buffer-pool-size=20M", "--log-bin=mysql-bin", "--server-id=1"]
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_REPLICA_USER: ${MYSQL_REPLICATION_USER}
            MYSQL_REPLICA_PASS: ${MYSQL_REPLICATION_PASSWORD}
        image: mjrone/mysql-replica:latest
        networks:
            - code-network
        ports:
            - 3306:3306
        restart: unless-stopped
        volumes:
            - "/vagrant/docker/log:/var/log:rw"
            - "/vagrant/docker/backup:/backup"
    dbSlave:
        command: ["mysqld", "--innodb-buffer-pool-size=20M", "--log-bin=mysql-bin", "--server-id=2"]
        depends_on:
            - dbMaster
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_REPLICA_USER: ${MYSQL_REPLICATION_USER}
            MYSQL_REPLICA_PASS: ${MYSQL_REPLICATION_PASSWORD}
            MYSQL_MASTER_PORT: 3306
            MYSQL_MASTER_SERVER: dbMaster
            MYSQL_MASTER_WAIT_TIME: 10
        image: mjrone/mysql-replica:latest
        networks:
            - code-network
        ports:
            - 3307:3306
        restart: unless-stopped
        volumes:
            - "/vagrant/docker/log:/var/log:rw"

    #PHP Stacks
    php1:
        environment:
            PHP_XDEBUG_ENABLED: 1
            XDEBUG_CONFIG: remote_host=192.168.42.105
        image: mjrone/php:latest
        links:
            - dbMaster
            - dbSlave
            - memcached
            - redis
            - mailcatcher
            - es
            - mongodb
        networks:
            - code-network
        ports:
            - 9100:9000
        volumes:
            - "/vagrant/app:/var/www:rw"
            - "/vagrant/docker/log:/var/log:rw"
    php2:
        environment:
            PHP_XDEBUG_ENABLED: 1
            XDEBUG_CONFIG: remote_host=192.168.42.105
        image: mjrone/php:latest
        links:
            - dbMaster
            - dbSlave
            - memcached
            - redis
            - mailcatcher
            - es
            - mongodb
        networks:
            - code-network
        ports:
            - 9101:9000
        volumes:
            - "/vagrant/app:/var/www:rw"
            - "/vagrant/docker/log:/var/log:rw"
    queue:
        environment:
            PHP_XDEBUG_ENABLED: 1
            XDEBUG_CONFIG: remote_host=10.254.254.254
        image: mjrone/queue:latest
        links:
            - dbMaster
            - dbSlave
            - memcached
            - redis
            - mailcatcher
            - es
        networks:
            - code-network
        volumes:
            - "/vagrant/app:/var/www:rw"
            - "/vagrant/docker/log:/var/log:rw"
            - "/vagrant/docker/supervisor/etc:/etc/supervisor/conf.d:rw"

    #Web Server
    nginx:
        image: mjrone/nginx:latest
        links:
            - php1
            - php2
            - queue
            #- bounca
        networks:
            - code-network
        ports:
            - 8080:80
        volumes:
            - "/vagrant/app:/var/www:rw"
            - "/vagrant/docker/log:/var/log:rw"
            - "/vagrant/docker/etc/nginx:/etc/nginx/sites-available:rw"
            - "/www/static"

    #Cache + Queue
    memcached:
        command: memcached -m 1024m
        image: memcached:alpine
        mem_limit: 1g
        networks:
            - code-network
        ports:
            - "11211:11211"
        volumes:
            - "/vagrant/docker/log:/var/log:rw"

    redis:
        image: redis:alpine
        networks:
            - code-network
        ports:
            - 6379:6379
        volumes:
            - "/vagrant/docker/log:/var/log:rw"

    #SMTP Server
    mailcatcher:
        image: mjrone/mailcatcher
        networks:
            - code-network
        ports:
            - "1025:1025"
            - "8070:1080"
        volumes:
            - "/vagrant/docker/log:/var/log:rw"

    #DB Admin
    phpmyadmin:
        environment:
            PMA_USER: 'root'
            PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            PMA_PORT: 3306
            PMA_HOST: dbMaster
        image: phpmyadmin/phpmyadmin
        links:
            - dbMaster
            - dbSlave
        networks:
            - code-network
        ports:
            - "8090:80"
        volumes:
            - "/vagrant/docker/log:/var/log:rw"


    #StatsD
    statsd:
        image: kamon/grafana_graphite
        networks:
            - code-network
        ports:
            - '8050:80'
            - '8051:81'
            - '8125:8125/udp'
            - '8126:8126'
            - "2003-2004:2003-2004"
            - "2023-2024:2023-2024"
        volumes:
            - "/vagrant/docker/log:/var/log:rw"
            - "/vagrant/docker/statsd/whisper:/opt/graphite/storage/whisper"
            - "/vagrant/docker/statsd/grafana:/opt/grafana/data"

    #Elastic Search
    es:
        image: mjrone/elasticsearch
        ports:
            - "9200:9200"
            - "9300:9300"
        volumes:
            - "/vagrant/docker/log:/var/log:rw"

    #Mongo DB
    mongodb:
        image: mongo:3.2
        networks:
            - code-network
        ports:
            - "27017:27017"
        volumes:
            - "/vagrant/docker/log:/var/log:rw"
            - "/vagrant/docker/mongodb:/backup"
        restart: always
        tty: true

    #ErrBit
    errbit:
        image: errbit/errbit:latest
        volumes:
            - "/vagrant/docker/log:/var/log:rw"
        links:
          - mongodb
        networks:
            - code-network
        ports:
          - "8040:8040"
        environment:
            - PORT=8040
            - RACK_ENV=production
            - MONGO_URL=mongodb://mongodb:27017/errbit
            - SECRET_KEY_BASE=secretKEY123

networks:
    code-network:
        driver: bridge
